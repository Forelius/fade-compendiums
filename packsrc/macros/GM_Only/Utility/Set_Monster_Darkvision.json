{
  "folder": "8QnG4j2FXrIxRegn",
  "name": "Set Monster Darkvision",
  "type": "script",
  "_id": "agzIfMrCrUnExIec",
  "author": "0eyrbleKg5gmY59g",
  "img": "icons/svg/dice-target.svg",
  "scope": "global",
  "command": "(async () => {\n  // Get all world actors with type \"monster\"\n  const monsterActors = game.actors.filter(actor => actor.type === \"monster\");\n  if (!monsterActors.length) {\n    return ui.notifications.info(\"No monster actors found in the world.\");\n  }\n\n  // Define the desired sight settings\n  const sightData = {\n    angle: 360,\n    attenuation: 0,\n    brightness: 0,\n    color: null,\n    contrast: 0,\n    enabled: true,\n    range: 60,\n    saturation: -1,\n    visionMode: \"darkvision\"\n  };\n\n  // Process each monster actor's prototype token\n  for (const actor of monsterActors) {\n    // Retrieve current detection modes from the prototype token (if any)\n    let detectionModes = foundry.utils.duplicate(actor.prototypeToken?.detectionModes) || [];\n    \n    // Look for an existing detection mode with id \"basicSight\"\n    const idx = detectionModes.findIndex(dm => dm.id === \"basicSight\");\n    if (idx === -1) {\n      // Not found: add a new detection mode entry\n      detectionModes.push({ id: \"basicSight\", label: \"Basic Sight\", range: 60 });\n    } else {\n      // Found: update its range to 60\n      detectionModes[idx].range = 60;\n    }\n\n    // Update the actor's prototype token with the new sight and detection mode settings\n    await actor.update({\n      prototypeToken: {\n        sight: sightData,\n        detectionModes: detectionModes\n      }\n    });\n    console.log(`Updated actor \"${actor.name}\"`);\n  }\n\n  ui.notifications.info(`Updated ${monsterActors.length} monster actor(s).`);\n})();",
  "sort": 300000,
  "ownership": {
    "default": 0,
    "0eyrbleKg5gmY59g": 3
  },
  "flags": {},
  "_stats": {
    "systemId": "fantastic-depths"
  },
  "_originalKey": "!macros!agzIfMrCrUnExIec"
}